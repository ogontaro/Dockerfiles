name: Build Image

on:
  push:
    branches:
      - 'main'
  schedule:
    - cron: "0 0 * * *"

jobs:
  set-images:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-images.outputs.dir }}
    steps:
      - uses: actions/checkout@v4
      - name: set-images
        id: set-images
        run: |
          DIRS=$(find . -type f -name 'params.json' -exec dirname {} \; | jq -R -s -c 'split("\n")[:-1]')
          echo "dir=${DIRS}" >> $GITHUB_OUTPUT
  build-and-push:
    runs-on: ubuntu-latest
    needs: set-images
    strategy:
      # 並列実行のジョブが一つでも失敗しても、他のジョブをキャンセルしないように
      fail-fast: false
      matrix:
        dir: ${{ fromJson(needs.set-images.outputs.dir) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # fix qemu: uncaught target signal 11
      # https://github.com/docker/buildx/issues/1170#issuecomment-1159350550
      - name: Reset QEMU
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Read parameters from JSON
        id: params
        working-directory: ${{ matrix.dir }}
        run: |
          content=$(cat params.json)
          repository=$(echo $content | jq -r '.repository')
          echo "repository: $repository"
          echo "platforms=$(echo $content | jq -r '.platforms | join(",")')" >> $GITHUB_OUTPUT
          echo "platforms: $(echo $content | jq -r '.platforms | join(",")')"
          use_latest=$(echo $content | jq -r '.tags.useLatest')
          raw_tag=$(echo $content | jq -r '.tags.raw // "null"')
          tags=""
          if [ "$use_latest" == "true" ]; then
            tags="$repository:latest"
          fi
          if [ "$raw_tag" != "null" ]; then
            if [ -n "$tags" ]; then
              tags="$tags,$repository:$raw_tag"
            else
              tags="$repository:$raw_tag"
            fi
          fi
          echo "tags=$tags" >> $GITHUB_OUTPUT
          echo "tags: $tags"
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./${{ matrix.dir }}
          platforms: ${{ steps.params.outputs.platforms }}
          tags: ${{ steps.params.outputs.tags }}
          labels: |
            org.opencontainers.image.authors=ogontaro <ogontaro@gmail.com>
            org.opencontainers.image.url=https://github.com/ogontaro/Dockerfiles/${{ matrix.dir }}
            org.opencontainers.image.source=https://github.com/ogontaro/Dockerfile/${{ matrix.dir }}
            org.opencontainers.image.created=${{ steps.params.outputs.created }}
